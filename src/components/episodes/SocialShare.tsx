import { Button } from "@/components/ui/button";
import { Linkedin, Share2, MessageCircle } from "lucide-react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

interface SocialShareProps {
  episodeTitle: string;
  episodeUrl: string;
  insights?: string;
}

export function SocialShare({ episodeTitle, episodeUrl, insights }: SocialShareProps) {
  // Format insights for better readability
  const formatInsights = (insights?: string) => {
    console.log('Raw insights:', insights); // Debug log
    if (!insights) return '';
    
    const lines = insights
      .split('\n')
      .map(line => line.trim())
      .filter(line => line.length > 0)
      .map(line => line.replace(/^\d+\.\s*|^[â€¢-]\s*/, '').trim()) // Remove any numbering or bullets
      .filter(line => line.length > 0);
      
    console.log('Formatted lines:', lines); // Debug log
    return lines.map(line => `â€¢ ${line}`).join('\n');
  };

  // Create LinkedIn share text
  const createLinkedInText = () => {
    const formattedInsights = formatInsights(insights);
    console.log('LinkedIn formatted insights:', formattedInsights); // Debug log
    
    const text = [
      `ðŸŽ“ I just learned from "${episodeTitle}" using PodClass AI!`,
      formattedInsights ? `\nKey takeaways:\n${formattedInsights}` : '',
      '\nGenerated by @PodClass - Turn any podcast into personalized lessons',
      '#PodcastLearning #AI #PersonalDevelopment'
    ].filter(Boolean).join('\n');

    return text;
  };

  // Create WhatsApp share text
  const createWhatsAppText = () => {
    const formattedInsights = formatInsights(insights);
    console.log('WhatsApp formatted insights:', formattedInsights); // Debug log
    
    const text = [
      `ðŸ“š Check out what I learned from "${episodeTitle}":`,
      formattedInsights || '',
      'Try PodClass - Your AI Podcast Learning Assistant',
      episodeUrl
    ].filter(Boolean).join('\n');

    return text;
  };
  
  const shareToLinkedIn = () => {
    const text = createLinkedInText();
    console.log('LinkedIn share text:', text); // Debug the full share text
    
    // LinkedIn has a character limit, so let's ensure we don't exceed it
    const truncatedText = text.length > 1200 ? text.slice(0, 1197) + '...' : text;
    
    const linkedInUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(episodeUrl)}&title=${encodeURIComponent(episodeTitle)}&text=${encodeURIComponent(truncatedText)}`;
    console.log('LinkedIn share URL:', linkedInUrl); // Debug the final URL
    
    window.open(linkedInUrl, '_blank', 'width=600,height=600');
  };

  const shareToWhatsApp = () => {
    const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(createWhatsAppText())}`;
    window.open(whatsappUrl, '_blank');
  };

  // Preview modal could be added here for future enhancement

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="outline" size="sm" className="gap-2">
          <Share2 className="h-4 w-4" />
          Share Insights
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent align="end" className="w-56">
        <DropdownMenuItem onClick={shareToLinkedIn} className="gap-2 cursor-pointer">
          <Linkedin className="h-4 w-4" />
          Share on LinkedIn
        </DropdownMenuItem>
        <DropdownMenuItem onClick={shareToWhatsApp} className="gap-2 cursor-pointer">
          <MessageCircle className="h-4 w-4" />
          Share on WhatsApp
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
  );
} 